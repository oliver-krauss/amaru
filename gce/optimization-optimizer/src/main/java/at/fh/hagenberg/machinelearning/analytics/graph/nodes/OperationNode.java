/*
 * Copyright (c) 2022 the original author or authors.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 */

package at.fh.hagenberg.machinelearning.analytics.graph.nodes;

import org.neo4j.ogm.annotation.Id;
import org.neo4j.ogm.annotation.NodeEntity;
import org.neo4j.ogm.annotation.Relationship;

import java.util.HashSet;
import java.util.Set;

@NodeEntity
public class OperationNode {

    /**
     * Id generated by database
     */
    @Id
    private Long id;

    /**
     * The operation that was executed
     */
    private String operation;

    /**
     * Links to all ASTs that were used in this operation
     */
    @Relationship(type = "INPUT", direction = Relationship.INCOMING)
    Set<NodeWrapper> input = new HashSet<>();

    /**
     * Links to all ASTs that were used in this operation
     */
    @Relationship(type = "OUTPUT", direction = Relationship.OUTGOING)
    Set<NodeWrapper> output = new HashSet<>();

    /**
     * references the step in the algorithm that called this operation
     */
    @Relationship(type = "EXECUTED", direction = Relationship.INCOMING)
    StepNode step;

    public OperationNode() {
    }

    public OperationNode(String operation) {
        this.operation = operation;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getOperation() {
        return operation;
    }

    public void setOperation(String operation) {
        this.operation = operation;
    }

    public void addInput(NodeWrapper wrapper) {
        input.add(wrapper);
    }

    public Set<NodeWrapper> getInput() {
        return input;
    }

    public void setInput(Set<NodeWrapper> input) {
        this.input = input;
    }

    public void addOutput(NodeWrapper wrapper) {
        output.add(wrapper);
    }

    public Set<NodeWrapper> getOutput() {
        return output;
    }

    public void setOutput(Set<NodeWrapper> output) {
        this.output = output;
    }

    public StepNode getStep() {
        return step;
    }

    public void setStep(StepNode step) {
        this.step = step;
    }
}

